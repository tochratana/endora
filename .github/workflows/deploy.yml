name: Deploy to Cloud Run

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: api-engine-backend
  REGION: asia-southeast1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Run tests
      run: ./gradlew test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build application
      run: ./gradlew build -x test

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Configure Docker to use gcloud as a credential helper
      run: gcloud auth configure-docker

    - name: Build Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA .

    - name: Push Docker image
      run: |
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --memory 1Gi \
          --cpu 1 \
          --timeout 600 \
          --set-env-vars="SPRING_PROFILES_ACTIVE=cloud" \
          --set-env-vars="DATABASE_URL=jdbc:postgresql://google/endora?cloudSqlInstance=api-engine-backend-20250829:asia-southeast1:api-ngin-postgres-db-asia&socketFactory=com.google.cloud.sql.postgres.SocketFactory&useSSL=false" \
          --set-env-vars="DB_USERNAME=postgres" \
          --set-env-vars="DB_PASSWORD=EndoraSecure2024!" \
          --set-env-vars="DB_DRIVER=org.postgresql.Driver" \
          --set-env-vars="DB_PLATFORM=org.hibernate.dialect.PostgreSQLDialect" \
          --set-env-vars="DDL_AUTO=validate" \
          --set-env-vars="SPRING_DATA_MONGODB_URI=mongodb+srv://endora_user:EndoraSecure2024!@endora-cluster.p5pmd6m.mongodb.net/endora?retryWrites=true&w=majority" \
          --set-env-vars="KEYCLOAK_SERVER_URL=https://endora-oauth2.istad.co/" \
          --set-env-vars="KEYCLOAK_REALM=endora_api" \
          --set-env-vars="KEYCLOAK_CLIENT_ID=spring-admin" \
          --set-env-vars="KEYCLOAK_CLIENT_SECRET=uliUJohOY9OI1jM1SnFrog5iJ23JXWJN" \
          --set-env-vars="KEYCLOAK_ADMIN_CLIENT_ID=admin-cli" \
          --set-env-vars="KEYCLOAK_ADMIN_CLIENT_SECRET=b2L6hrMg76JLk4GSLd8CGMPRJNnAOko2" \
          --set-env-vars="KEYCLOAK_ISSUER_URI=https://endora-oauth2.istad.co/realms/endora_api" \
          --add-cloudsql-instances=api-engine-backend-20250829:asia-southeast1:api-ngin-postgres-db-asia
